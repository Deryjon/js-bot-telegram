require("dotenv").config();
const { Bot, GrammyError, HttpError, Keyboard } = require("grammy");

const bot = new Bot(process.env.BOT_TOKEN);
const api = 'postgresql://postgres:CqmwWyTqQDahXiUpcQdCJDhxuwylXFBM@monorail.proxy.rlwy.net:35376/railway'

bot.api.setMyCommands([
  { command: "start", description: "–°—Ç–∞—Ä—Ç –±–æ—Ç" },
  { command: "my_profile", description: "–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å" },
]);

bot.command("start", async (ctx) => {
  await ctx.reply(
    "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç. –¢–≥ –∫–∞–Ω–∞–ª: <a href='https://t.me/dery_budni'>—Å—Å—ã–ª–∫–∞</a>",
    {
      parse_mode: "HTML",
    }
  );
});

bot.hears("ID", async (ctx) => {
  await ctx.reply("–í–∞—à ID: " + ctx.from.id);
});
// bot.on('msg').filter((ctx) => {
//    return ctx.from.id === 783350617
// }, async (ctx) => {
//     await ctx.reply('–ü—Ä–∏–≤–µ—Ç, –∞–¥–º–∏–Ω!')
// });

// bot.on("message", async (ctx) => {
//   await ctx.reply("–ù–∞–¥–æ –ø–æ–¥—É–º–∞—Ç—å....");
// });
bot.command("my_profile", async (ctx) => {
  await ctx.reply(
    `–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å \n\nüÜî: ${ctx.from.id}\nüë§: ${ctx.from.username || "–ù–µ—Ç"}\nüî§: ${ctx.from.first_name}\nüìû: –ù–µ—Ç—É`
  );

  // –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
  const phoneKeyboard = new Keyboard()
    .requestContact('–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞').resized();

  await ctx.reply("–ú–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞!", {
    reply_markup: { keyboard: phoneKeyboard.build() }
  });
});

// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
bot.on("message:contact", async (ctx) => {
  const contact = ctx.message.contact;
  await ctx.reply(`–°–ø–∞—Å–∏–±–æ! –í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: ${contact.phone_number}`, {
    reply_markup: { remove_keyboard: true }
  });
});


bot.catch((err) => {
  const ctx = err.ctx;
  console.error(`Error while handling update ${ctx.update.update_id}:`);
  const e = err.error;
  if (e instanceof GrammyError) {
    console.error("Error in request:", e.description);
  } else if (e instanceof HttpError) {
    console.error("Could not contact Telegram:", e);
  } else {
    console.error("Unknown error:", e);
  }
});
bot.start();
